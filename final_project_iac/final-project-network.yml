Description: >
    Tony Hendrick / Udacity 2020
    IaC Final Project CloudFormation Template
    Network Stack


Parameters:
# whatever you consider a changing value, put it as a parameter instead of hard-coding it into your script
    EnvironmentName:
        Description: Single Parameter that we are passing with the env name.
        Type: String

    VpcCIDR:
        Description: The VPC CIDR (CIDR Notation)
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: The CIDR range of Private Subnet 1 (CIDR Notation)
        Type: String
        Default: 10.0.0.0/24

    PublicSubnet2CIDR:
        Description: The CIDR range of Private Subnet 1 (CIDR Notation)
        Type: String
        Default: 10.0.1.0/24

    PrivateSubnet1CIDR:
        Description: The CIDR range of Private Subnet 1 (CIDR Notation)
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet2CIDR:
        Description: The CIDR range of Private Subnet 2 (CIDR Notation)
        Type: String
        Default: 10.0.3.0/24


Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties: 
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName} VPC

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet 1

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet 2

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet 1

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet 2


    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
          Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Internet Gateway

    IGAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        DependsOn: InternetGateway
        Properties:
          VpcId: !Ref VPC
          InternetGatewayId: !Ref InternetGateway


    EIPNatGateway1:
        Type: AWS::EC2::EIP
        DependsOn: IGAttachment
        Properties:
            Domain: vpc

    EIPNatGateway2:
        Type: AWS::EC2::EIP
        DependsOn: IGAttachment
        Properties:
            Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt EIPNatGateway1.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt EIPNatGateway2.AllocationId
            SubnetId: !Ref PublicSubnet2


    RouteTablePublic:
        Type: AWS::EC2::RouteTable
        Properties:
          VpcId: !Ref VPC
          Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Route Table

    RouteDefaultPublic:
        Type: AWS::EC2::Route
        DependsOn: IGAttachment
        Properties:
           RouteTableId: !Ref RouteTablePublic
           DestinationCidrBlock: 0.0.0.0/0
           GatewayId: !Ref InternetGateway
    
    RouteTableAssociationPublicSubnet1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref RouteTablePublic
            SubnetId: !Ref PublicSubnet1

    RouteTableAssociationPublicSubnet2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref RouteTablePublic
            SubnetId: !Ref PublicSubnet2


    RouteTablePrivate1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref RouteTablePrivate1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    RouteTableAssociationPrivateSubnet1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref RouteTablePrivate1
            SubnetId: !Ref PrivateSubnet1


    RouteTablePrivate2:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Routes (AZ2)

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref RouteTablePrivate2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    RouteTableAssociationPrivateSubnet2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref RouteTablePrivate2
            SubnetId: !Ref PrivateSubnet2

Outputs:
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${EnvironmentName}-VPCID
    
    PublicSubnets:
        Description: A reference to the public subnets
        Value: !Join [ ',', [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]
        Export:
            Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets:
        Description: A reference to the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-NETS

    PublicSubnet1:
        Description: A reference to Public Subnet 1
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PUB1-SN

    PublicSubnet2:
        Description: A reference to Public Subnet 2
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PUB2-SN

    PrivateSubnet1:
        Description: A reference to Private Subnet 1
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PRIV1-SN

    PrivateSubnet2:
        Description: A reference to Private Subnet 2
        Value: !Ref PrivateSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PRIV2-SN

    InternetGateway:
        Description: A reference to the internet gateway
        Value: !Ref InternetGateway
        Export:
            Name: !Sub ${EnvironmentName}-IG